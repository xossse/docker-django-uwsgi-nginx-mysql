# Generated by Django 3.1.12 on 2021-09-06 15:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, max_length=255, unique=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('two_factor', models.BooleanField(default=False, verbose_name='2FA')),
                ('secret_code', models.CharField(default='', max_length=40)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_email_confirm', models.BooleanField(default=False)),
                ('is_support', models.BooleanField(default=False)),
                ('activation_key', models.CharField(default='', max_length=40)),
                ('key_expires', models.DateTimeField()),
                ('bot_uuid', models.CharField(blank=True, max_length=250, null=True, verbose_name='Бот UUID')),
                ('balance', models.FloatField(blank=True, default=0, verbose_name='Баланс')),
                ('telegram', models.CharField(blank=True, max_length=250, null=True, verbose_name='Телеграм')),
                ('referral', models.IntegerField(blank=True, null=True, verbose_name='ID Реферрала')),
                ('ref_balance', models.CharField(blank=True, default=0, max_length=250, null=True, verbose_name='Реферальный баланс')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_address', models.CharField(max_length=500, verbose_name='Адрес')),
                ('amount', models.FloatField(blank=True, null=True, verbose_name='Сумма')),
                ('confirmation', models.BooleanField(default=False, verbose_name='Подтвержденный платеж')),
                ('invoice_id', models.CharField(max_length=250, verbose_name='Номер заказа')),
                ('secret', models.CharField(max_length=250, verbose_name='Секретный ключ')),
                ('type', models.CharField(blank=True, max_length=250, null=True, verbose_name='Тип адреса')),
                ('input_transaction_hash', models.CharField(blank=True, max_length=500, null=True, verbose_name='Хэш входной транзакции')),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Адрес',
                'verbose_name_plural': 'Адреса',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15)),
                ('code', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='GeneralCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Название категории')),
                ('name_en', models.CharField(max_length=250, verbose_name='Название категории EN')),
                ('icon', models.CharField(max_length=250, verbose_name='Иконка')),
                ('slug', models.SlugField(verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Главная категория HelpCenter',
                'verbose_name_plural': 'Главные категории HelpCenter',
            },
        ),
        migrations.CreateModel(
            name='HelpTiket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('urgency', models.CharField(max_length=100)),
                ('body', models.TextField(max_length=1000)),
                ('read', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('in_process', models.DateTimeField()),
                ('in_finish', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='walletType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Название')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coreWallet.currency', verbose_name='Название валюты')),
            ],
            options={
                'verbose_name': 'Тип кошелька',
                'verbose_name_plural': 'Типы кошельков',
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wallet_id', models.CharField(max_length=500, verbose_name='Номер кошелька')),
                ('balance', models.FloatField(blank=True, null=True, verbose_name='Баланс кошелька')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
                ('transfer_key', models.CharField(max_length=500, verbose_name='Ключ для перевода средств')),
                ('callback', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Ссылка на колбэк')),
                ('count_confirmation', models.IntegerField(default=3, verbose_name='Количество подтверждений')),
                ('icon', models.CharField(blank=True, max_length=250, null=True, verbose_name='Иконка')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coreWallet.wallettype', verbose_name='Тип кошелька')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Кошелек',
                'verbose_name_plural': 'Кошельки',
            },
        ),
        migrations.CreateModel(
            name='UserTelegramChat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=250, verbose_name='Чат ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=250, verbose_name='Название проекта')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[(None, 'Тип уведомления'), ('success', 'Успешно'), ('error', 'Ошибка'), ('warning', 'Предупреждение'), ('info', 'Инфо')], max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('text', models.CharField(blank=True, max_length=500, null=True)),
                ('read', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TwoLevelCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500, verbose_name='Заголовок')),
                ('text_en', models.CharField(max_length=500, verbose_name='Заголовок EN')),
                ('general_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coreWallet.generalcategory', verbose_name='Главная категория')),
            ],
            options={
                'verbose_name': 'Категория второго уровня',
                'verbose_name_plural': 'Категории второго уровня',
            },
        ),
        migrations.CreateModel(
            name='ReferralCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Реферальный код')),
                ('percent', models.IntegerField(default=15, verbose_name='Процент')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique=True, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Реферальный код',
                'verbose_name_plural': 'Реферальные коды',
            },
        ),
        migrations.CreateModel(
            name='ReferralBalanceChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(verbose_name='Реферальные бонусы')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Реферальный баланс',
                'verbose_name_plural': 'Реферальный баланс',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('uuid', models.CharField(max_length=100, verbose_name='UUID')),
                ('status', models.CharField(choices=[(None, 'Укажи статус'), ('created', 'Создан'), ('paid', 'Оплачен'), ('failed', 'Ошибка'), ('canceled', 'Отменен')], max_length=100, verbose_name='Статус')),
                ('type', models.CharField(choices=[(None, 'Укажи тип'), ('up', 'Поступление'), ('dw', 'Выплата'), ('change', 'Списание')], max_length=20, verbose_name='Тип счета')),
                ('type_request', models.CharField(blank=True, max_length=50, null=True, verbose_name='Тип заявки')),
                ('comment', models.TextField(blank=True, max_length=2500, null=True, verbose_name='Комментарий')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coreWallet.address', verbose_name='Адрес')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coreWallet.currency', verbose_name='Валюта приема')),
            ],
            options={
                'verbose_name': 'Счет',
                'verbose_name_plural': 'Счета',
            },
        ),
        migrations.CreateModel(
            name='historyLogin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=500, verbose_name='IP Авторизации')),
                ('date', models.DateTimeField(verbose_name='Дата авторизации')),
                ('useragent', models.CharField(max_length=500, verbose_name='UserAgent')),
                ('two_factor', models.BooleanField(verbose_name='2FA')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'История авторизации',
                'verbose_name_plural': 'История авторизций',
            },
        ),
        migrations.CreateModel(
            name='HelpTiketMassage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=1000)),
                ('read', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('tiket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coreWallet.helptiket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HelpTiketFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_url', models.CharField(max_length=1000)),
                ('tiket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coreWallet.helptiket')),
            ],
        ),
        migrations.AddField(
            model_name='helptiket',
            name='user_project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coreWallet.userproject'),
        ),
        migrations.CreateModel(
            name='HelpCenterBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', tinymce.models.HTMLField(verbose_name='Текст блока')),
                ('body_en', tinymce.models.HTMLField(verbose_name='Текст блока EN')),
                ('two_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coreWallet.twolevelcategory', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Текстовый блок',
                'verbose_name_plural': 'Текстовые блоки',
            },
        ),
        migrations.CreateModel(
            name='CurrencyRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('k', models.FloatField()),
                ('last_update', models.DateTimeField()),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='currency_in', to='coreWallet.currency')),
                ('name2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='currency_out', to='coreWallet.currency')),
            ],
        ),
        migrations.AddField(
            model_name='address',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coreWallet.userproject', verbose_name='Проект'),
        ),
        migrations.AddField(
            model_name='address',
            name='wallet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coreWallet.wallet', verbose_name='Кошелек'),
        ),
    ]
